
-----------------------------------------------
       Preparing a "staging" release.
-----------------------------------------------

(0.) Become nova@oven.

(1.) Tag the code:

cd ~/supernova
svn copy -m "tag" . ^/tags/nova/2011-06-29-1 

(with today's date, and an appropriate release number)

(2.) Update the staging area and build:

cd ~/staging
svn switch ^/tags/nova/2011-06-29-1
make
make py
make extra

(3.) Restart process_submissions.py

screen -R staging
# kill running process_submissions -- possible via:
  jobs
  fg 1
  [ctrl-C]
or:
  jobs
  kill %1
# Restart process_submissions.py:
python -u process_submissions.py < /dev/null >> proc.log 2>&1 &
# exit the "screen"
[ctrl-A d]

(4.) Backup the nova database and data:

~/database-backups/backup-nova.sh
~/data-backups/backup-nova.sh

(5.) Migrate the nova database and data:

The exact details will depend on whether you have to run any elaborate
schema migration scripts.  In the simplest case, copy the database:

cd ~/staging/net
pg_dump an-nova > nova.sql
dropdb an-staging
createdb an-staging
python manage.py syncdb
psql an-staging < nova.sql

And copy the data:

cd ~/staging/net
# remove current staging data
rm -Rf data jobs
# copy all nova's files
cp -a ~/nova/net/{data,jobs} .

(7.) Test it out, email the group when it's ready for review.

(8.) Decide to launch!




-----------------------------------------------
     So you decided to launch.  Now what?
-----------------------------------------------

(1.) Get dstn to take down the apache2-nova server.

(2.) Become nova@oven .

(3.) Update the code and build.

cd ~/nova
svn switch ^/tags/nova/2011-06-29-1
make
make py
make extra

(4.) Restart process_submissions.py (as described above)

(5.) Migrate the database and data (as above)

(6.) Get dstn to bring up the apache2-nova server again.


