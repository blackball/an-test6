#! /bin/bash

set -e

# This script gets run on astro.cs.toronto.edu via ssh from oven.
# Careful about writing things to stdout - we pipe it to tar on the other end.

# Assume that we start in the directory containing the "backend" executable.
PWD=$(pwd)
BACKEND="$PWD/backend"

# Read jobid
read -s jobid

# Create our job directory.
cd /tmp
mkdir -p $jobid
cd $jobid
# Delete previous contents... carefully
rm -f wcs.fits job.axy

echo "In job dir $(pwd)" > backend.log
tar xvf - >> backend.log

# stderr goes back over the ssh tunnel to the log file on oven.
$BACKEND -v --to-stderr -c /data1/INDEXES/200/cfg job.axy >> backend.log

# Send back all the files we generated!
tar cf - --exclude job.axy *

#! /bin/bash

set -e

# This script gets run on astro.cs.toronto.edu via ssh from oven.
# Careful about writing things to stdout - we pipe it to tar on the other end.

# Assume that we start in the directory containing the "backend" executable.
PWD=$(pwd)
BACKEND="$PWD/backend"

# Read jobid
read -s jobid

# Create our job directory.
cd /tmp
mkdir -p $jobid
cd $jobid
# Delete previous contents... carefully
rm -f wcs.fits job.axy

echo "In job dir $(pwd)" > backend.log
tar xvf - >> backend.log

# stderr goes back over the ssh tunnel to the log file on oven.
$BACKEND -v --to-stderr -c /data1/INDEXES/200/cfg job.axy >> backend.log

# Send back all the files we generated!
tar cf - --exclude job.axy *

