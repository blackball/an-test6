** Astrometry.net ** Blind Solver ** Source Code Demo **


This file explains the contents of the Astrometry.net Blind Solver 
Source Code Demo and how you can use it to solve your own fields.

LARGE WARNING: the data files we supply cover only 1/12 of the sky, so
if you are trying to solve a field outside this region you will be
unsuccessful.  Please contact the Astrometry.net team for access to the
other 11/12 of the sky.

The demo's home is  http://monte.ai.toronto.edu:8080/quads/  .

It is composed of the following components:
  quads.tar.gz - the source code.
  cut-02.tar.gz - a catalog of stars covering 1/12 of the sky.
  sdssfield01-hp02.tar.gz - a subset of SDSS r-band fields that lie in the
                            same 1/12 of the sky.

The cut-02.tar.gz archive contains the following file:
  an-sdss-02.skdt.fits
which stores about 12 million stars that were selected for spatial
uniformity and brightness in the "r" band.  It covers 1/12 of the sky:
healpix 2, which is bounded by the RA,DEC quadrilateral (225,90), (180,Y),
(225,0), (270,Y), where Y = acos(2/3) ~= 48.19 degrees.

In principle, you could use the source code to reproduce this file.  It's
a simple but resource-intensive process: you would requires access to the
source catalogs (USNO-B and Tycho-2), a few hundred gigabytes of disk space
and dozens of hours of compute time.  Contact the Astrometry.net team if you
are interested in doing this.

The sdssfield01-hp02.tar.gz archive contains the following file:
  sdssfield01-hp02.xy.fits
which is a random set of fields from the Sloan Digital Sky Survey (SDSS)
that lie within healpix 2.  For each field, it lists the pixel coordinates
of the brightest 150 objects in the field.  For instructions on how to
reproduce this file, please contact the Astrometry.net team.

The demo carries out two distinct tasks: it first builds an index, then uses
the index to solve some fields.

The index is composed of three files which will end up in the
pipeline/sdss-1 directory:
  sdss-1-02.skdt.fits
  sdss-1-02.ckdt.fits
  sdss-1-02.quad.fits
several other files will be generated along the way, but only these three
are required to solve fields.

Solving a field is done by the program "slave".  It reads an input file
which tells it where to find the files it needs and how to set the
various parameters.  If you want to solve your own fields, it will probably
be easiest to edit the input file used by the demo:
  pipeline/input/input.000

In order to use the solver to solve your own fields, you need to produce
a field file in the appropriate format:
  - FITS format
  - BINTABLE (binary table)
  - one extension per field
  - pixel coordinates stored as two columns in format "1D" or "1E"
    (float/double)
  - sorted in decreasing order of brightness

We have included some utilities to help produce and manipulate FITS files:
  - xylist2fits converts ASCII object lists to FITS
  - tabsort sorts FITS tables
  - subtable extracts columns from FITS tables
  - tablist prints FITS tables

"xylist2fits" lets you convert an ASCII object list to FITS.  Two ASCII
formats are accepted; you probably want the "simple" one, which is one
object per line, x and y coordinates separated by a space.  For example,
this is a valid object list:
  45.05 32.78
  98.02 -4.80
which you could convert to FITS using this command:
  xylist2fits -c input.txt output.xy.fits

You can verify the contents using "tablist":
  tablist output.xy.fits
should print this:
                 X              Y 
   1        45.0500        32.7800 
   2        98.0200       -4.80000 


To solve this field, you could copy and edit the "input.000" file.  Let's
say you copied "input.000" to "input.myfield".  You would change the 
following lines in "input.myfield":

-  field sdss-fields/sdssfield01-hp02.xy
This says which field file to solve, excluding the ".fits" suffix.  You
might change it to:
   field output.xy

-  fields 0/2617
This says what range of fields within the file to solve.  If you're solving
a single field, change it to:
   fields 0

-  fieldunits_lower 0.39
-  fieldunits_upper 0.41
These entries tell the solver what the pixel scale of your image is, in
units of arcseconds per pixel.  SDSS fields have a pixel scale of about
0.396, so we have set the range to [0.39, 0.41].  If you know the pixel
scale exactly, you should set the bounds to, say, +/- 5% of the real value.

-  solved solved/solved.01
-  match match/match.00.01
-  done done/done.00.01
These are the output file names.  You could change them to, say,
   solved solved.myfield
   match match.myfield
   done done.myfield


To run the solver, do:
   slave < input.myfield


If a solution is found, it will be written to the file "match.myfield";
you can view it using the "tablist" utility.

At present we aren't writing out WCS headers; this will be fixed
REAL SOON NOW (tm).


Have fun, and let us know about your successes, failures, trials and
tribulations.

Cheers,
-the Astrometry.net team

