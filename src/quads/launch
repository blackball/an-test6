#! /bin/bash

echo Args: $*
num=`printf %03i $1`
echo Num $num
input=input/input.$num
output=stdout/stdout.$num
err=stderr/stderr.$num

echo "Running on host:"
hostname
echo

if [ -e $input ]; then
  echo;
else
  echo "Input file ($input) not found - exiting.";
  exit
fi

# check for another instance of "slave" running on this machine.
if ps -C slave -o cmd h; then
  PID=`ps -C slave -o pid h`
  echo "Another instance of \"slave\" is running on this machine: pid $PID.  Exiting.";
  exit
fi

# check for another instance of "launch" running on this machine.
PID1=$(ps h -C launch -o "pid cmd")
PID2=$(echo "$PID1" | grep -v $$)
if [ "x$PID2" != "x" ]; then
  PIDS=$(echo "$PID2" | gawk '{print $1}')
  echo "Another instance of \"launch\" is running on this machine: pid(s) $PIDS.  Exiting.";
  exit
fi

index=`gawk '/index\>/{print $2}' $input`
index_src=`gawk '/index_src\>/{print $2}' $input`
index_dir=`dirname $index`
echo index is $index
echo index_src is $index_src
echo index_dir is $index_dir

CMD="mkdir -p $index_dir"
echo $CMD
$CMD
for x in quad ckdt skdt; do
  CMD="time rsync $index_src.${x}.fits $index_dir";
  echo $CMD
  $CMD
done

echo "starting slave..."
/home/dstn/quads/slave < $input > $output 2> $err

echo "removing files..."
for x in quad ckdt skdt; do
  CMD="rm -v $index_src.${x}.fits $index_dir";
  echo $CMD
  $CMD
done

