graph indexpipeline {
	graph [ rankdir = LR ];
	node [ shape=box ];
	edge [ dir=forward ];
	node [ style=filled, fillcolor=azure2 ];
	skdt [ label="Star kdtree\n(.skdt)" ];
	quad  [ label="Quad stars\n(.quad)" ];
	ckdt  [ label="Code kdtree\n(.ckdt)" ];
	node [ style="" ];
	code  [ label="Quad codes\n(.code)" ];

	node [ shape=ellipse ];
	skdt -- hpquads
	hpquads -- code
	hpquads -- quad
	code -- codetree -- ckdt

}

// render with:
//   dot -Tps2 -o pipeline1.eps pipeline1.dot
//   epstopng pipeline1.eps

// to get bounding box:
//   gs -q -dNOPAUSE -dBATCH -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -sDEVICE=bbox pipeline.ps
// to render as png:
//   gs -q -dNOPAUSE -dBATCH -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -sDEVICE=png16m -sOutputFile=pipeline.png -g850x162 pipeline.ps
// (where 850x162 is determined by the output of the bounding-box stage)

