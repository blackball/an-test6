graph indexpipeline {
	graph [ rankdir = LR ];
	node [ shape=box ];
	edge [ dir=forward ];
	objs [ label="Healpix-ified catalogue\n(.objs)" ];
	ddobjs [ label="Deduplicated catalogue\n(.objs)" ];
	ckdt [ label="Code kd-tree\n(.ckdt)" ];
	quad [ label="Quads\n(.quad)" ];
	node [ style="" ];
	code [ label="Quad Codes\n(.code)" ];

	node [ shape=ellipse ];
	codetree [ label="codetree" ];

	objs -- deduplicate
	deduplicate -- ddobjs
	ddobjs -- hpquads
	hpquads -- code
	hpquads -- quad
	code -- codetree
	codetree -- ckdt
}

// render with:
//   dot -Tps2 -o pipeline.ps pipeline.dot
// to get bounding box:
//   gs -q -dNOPAUSE -dBATCH -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -sDEVICE=bbox pipeline.ps
// to render as png:
//   gs -q -dNOPAUSE -dBATCH -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -sDEVICE=png16m -sOutputFile=pipeline.png -g850x162 pipeline.ps
// (where 850x162 is determined by the output of the bounding-box stage)

